=head1 NAME

JPList

JPList module is a data source bundle that works with Perl and database handle where as jPlist (http://jplist.com) behaves as UI module only. 

=head1 INSTALLATION

To install this module, run the following commands:

    perl Makefile.PL
    make
    make test
    make install


=head1 SYNOPSIS

Use JPList module to integrate with CGI or Perl MVC web application such as Catalyst/Dancer to decode jPList request params and integrate with your database using DBI handle.

    use JPList;

    my $jplist = JPList->new
                ({
                    dbh             => $dbh,
                    db_table_name   => 'Items', 
                    request_params  => $c->request->body_params->{statuses}
                });

    my $jp_resultset = $jplist->get_resultset();

    #Data
    $jp_resultset->{data};

    #Count
    $jp_resultset->{count};

=head1 DESCRIPTION

JPList module decodes the request params encoded by jplist L<ajax core module|https://raw.githubusercontent.com/no81no/jplist/master/dist/js/jplist.core-ajax.min.js> and then fetchs the data from appropriate table by applying required filter and sort options.

=head1 ATTRIBUTES

=over 4

=item "dbh" 
    Database handle 

=item "db_table_name" 
    Table name from where data should be fetched.

=item "request_params" 
    JPList UI module Request params passed here so that JPList modlue decodes and applys the fitler and sort accordingly

=back

=head1 METHODS

=over 4

=item "get_resultset" 

$jplist->get_resultset() is used to return the resultset data and count based on the jplist request params.

=back

=head1 SEE ALSO

=over 4

=item * L<Moose>

=item * L<URI::Escape>

=item * L<JSON>

=back

=head1 ACKNOWLEDGEMENTS

Development time supported by Exceleron L<www.exceleron.com|http://www.exceleron.com>.

=head1 AUTHOR

Sheeju Alex (L<sheeju|mailto:sheeju@exceleron.com>)

=head1 LICENSE AND COPYRIGHT

Copyright (C) 2017 Sheeju Alex

This program is free software; you can redistribute it and/or modify it
under the terms of the the Artistic License (2.0). You may obtain a
copy of the full license at:

L<http://www.perlfoundation.org/artistic_license_2_0>

Any use, modification, and distribution of the Standard or Modified
Versions is governed by this Artistic License. By using, modifying or
distributing the Package, you accept this license. Do not use, modify,
or distribute the Package, if you do not accept this license.

If your Modified Version has been derived from a Modified Version made
by someone other than you, you are nevertheless required to ensure that
your Modified Version complies with the requirements of this license.

This license does not grant you the right to use any trademark, service
mark, tradename, or logo of the Copyright Holder.

This license includes the non-exclusive, worldwide, free-of-charge
patent license to make, have made, use, offer to sell, sell, import and
otherwise transfer the Package with respect to any patent claims
licensable by the Copyright Holder that are necessarily infringed by the
Package. If you institute patent litigation (including a cross-claim or
counterclaim) against any party alleging that the Package constitutes
direct or contributory patent infringement, then this Artistic License
to you shall terminate on the date that such litigation is filed.

Disclaimer of Warranty: THE PACKAGE IS PROVIDED BY THE COPYRIGHT HOLDER
AND CONTRIBUTORS "AS IS' AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES.
THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
PURPOSE, OR NON-INFRINGEMENT ARE DISCLAIMED TO THE EXTENT PERMITTED BY
YOUR LOCAL LAW. UNLESS REQUIRED BY LAW, NO COPYRIGHT HOLDER OR
CONTRIBUTOR WILL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, OR
CONSEQUENTIAL DAMAGES ARISING IN ANY WAY OUT OF THE USE OF THE PACKAGE,
EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

=cut